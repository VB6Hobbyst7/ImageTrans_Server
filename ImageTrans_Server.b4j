AppType=StandardJava
Build1=Default,b4j.example
Group=Default Group
Library1=byteconverter
Library2=encryption
Library3=jcore
Library4=jokhttputils2
Library5=jserver
Library6=jshell
Library7=json
Library8=jstringutils
Library9=jrandomaccessfile
Module1=CacheFilter
Module2=Hello
Module3=MT
Module4=OCR
Module5=OCRResult
Module6=OCRVertices
Module7=Translate
Module8=Utils
NumberOfFiles=0
NumberOfLibraries=9
NumberOfModules=8
Version=8.9
@EndOfDesignText@
'Non-UI application (console / server application)
#Region Project Attributes 
	#CommandLineArgs:
	#MergeLibraries: True 
#End Region

Sub Process_Globals
	Private srvr As Server
	Public tempDir As String
	Public Running As Boolean=False
	Public shs As List
	Private Timer1 As Timer
	Private Timer2 As Timer
	Private accessedTimes As Map
End Sub

Sub AppStart (Args() As String)
	accessedTimes.Initialize
	Dim port As Int=51041
	If Args.Length>0 Then
		port=Args(0)
	End If
	shs.Initialize
	Timer1.Initialize("Timer1",60*60*1000)
    Timer1.Enabled=True
	Timer2.Initialize("Timer2",24*60*60*1000)
	Timer2.Enabled=True
	tempDir=File.Combine(File.Combine(File.DirApp,"www"),"temp")
	
	If File.Exists(tempDir,"")=False Then
		File.MakeDir(tempDir,"")
	End If
	'Dim result As OCRResult
	'result.Initialize(Utils.CreateVertices(Utils.CreateVertice(1,1),Utils.CreateVertice(1,1),Utils.CreateVertice(3,4),Utils.CreateVertice(1,1)),"")
	srvr.Initialize("srvr")
	srvr.AddHandler("/hello","Hello",False)
	srvr.AddHandler("/translate","Translate",False)
	srvr.AddHandler("/ocr","OCR",False)
	srvr.AddHandler("/mt","MT",False)
	srvr.AddFilter("/*", "CacheFilter", False)
	srvr.Port=port
	srvr.Start
	StartMessageLoop
End Sub

'Return true to allow the default exceptions handler to handle the uncaught exception.
Sub Application_Error (Error As Exception, StackTrace As String) As Boolean
	Return True
End Sub

Sub Timer1_Tick
	For Each sh As Shell In shs
		Try
			sh.KillProcess
		Catch
			Log(LastException)
		End Try
	Next
	shs.Clear
	Running=False
End Sub

Sub Timer2_Tick
	accessedTimes.Clear
End Sub

'return true if aaccess times less than 5 
Sub RecordAccess(ip As String) As Boolean
	Try
		Log(ip)
		If ip.StartsWith("127") Then
			Return True
		End If
		Dim times As Int=0
		If accessedTimes.ContainsKey(ip) Then
			times=accessedTimes.Get(ip)
		End If
		times=times+1
		If times<=5 Then
			accessedTimes.Put(ip,times)
			Return True
		Else
			Return False
		End If
	Catch
		Log(LastException)
	End Try
    Return False
End Sub
